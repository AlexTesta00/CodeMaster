name: CI/CD

on:
  push:
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '23.5.0'
          check-latest: false
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.3.0
      - name: Add Permission To Gradle
        run:  chmod +x ./gradlew
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: 'latest'
          mongodb-port: '27017'
      - name: Set MONGO_URI environement variable
        run: echo "MONGO_URI=mongodb://localhost:27017/test" >> $GITHUB_ENV
      - name: Build with Gradle
        env:
          MONGO_URI: ${{ env.MONGO_URI }}
        run: ./gradlew build
      - name: Upload coverage for authentication-service
        if: github.ref == 'refs/heads/main'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: authentication-service/coverage/lcov.info
          flags: authentication-service
          name: codecov-umbrella
          fail_ci_if_error: true
      - name: Upload coverage for codequest-service
        if: github.ref == 'refs/heads/main'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codequest-service/coverage/lcov.info
          flags: codequest-service
          name: codecov-umbrella
          fail_ci_if_error: true
      - name: Upload coverage for user-service
        if: github.ref == 'refs/heads/main'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: user-service/coverage/lcov.info
          flags: user-service
          name: codecov-umbrella
          fail_ci_if_error: true
      - name: Upload coverage for solution-service
        if: github.ref == 'refs/heads/main'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: solution-service/build/reports/kover/report.xml  # Path to your Kover XML report
          flags: solution-service
          name: codecov-umbrella
          fail_ci_if_error: true

  release:
    needs: build-and-test
    if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')  # Execute only on push on branch main
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '23.5.0'
          check-latest: false
      - name: Install dependencies
        run: npm install
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  delivery-docker-image:
    needs: release
    if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    env:
      IMAGE_PREFIX: wealecs
    strategy:
      matrix:
        service: [authentication-service, codequest-service, user-service]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: |
          IMAGE_NAME="${{ env.IMAGE_PREFIX }}/${{ matrix.service }}"
          docker build -t $IMAGE_NAME:latest ./${{ matrix.service }}
      - name: Push Docker image
        run: |
          IMAGE_NAME="${{ env.IMAGE_PREFIX }}/${{ matrix.service }}"
          docker push $IMAGE_NAME:latest