openapi: 3.0.3
info:
  title: User Service API
  version: 1.0.0
  description: API for managing users, trophies, and levels in the system.

servers:
  - url: /api/v1

paths:
  /users:
    get:
      summary: Retrieve the list of all users
      responses:
        '200':
          description: All users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: No users found

  /users/status:
    get:
      summary: Check the service status
      responses:
        '200':
          description: All services are up
        '500':
          description: External services are unreachable

  /users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
      responses:
        '200':
          description: User successfully registered
        '400':
          description: Validation error

  /users/{nickname}:
    get:
      summary: Get all information about a user
      parameters:
        - name: nickname
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    delete:
      summary: Delete a user
      parameters:
        - name: nickname
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
        '404':
          description: User not found

  /users/bio:
    put:
      summary: Update user bio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                newBio:
                  type: string
      responses:
        '200':
          description: Bio updated
        '404':
          description: User not found

  /users/profile-picture:
    put:
      summary: Update user profile picture
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                newProfilePicture:
                  type: string
      responses:
        '200':
          description: Profile picture updated
        '404':
          description: User not found

  /users/cv:
    put:
      summary: Update user CV
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                newCV:
                  type: string
      responses:
        '200':
          description: CV updated
        '404':
          description: User not found

  /users/languages:
    put:
      summary: Update known languages for the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                newLanguages:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Languages updated
        '404':
          description: User not found

  /users/trophies:
    put:
      summary: Update user trophies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                newTrophies:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Trophies updated
        '404':
          description: User not found

  /users/level/{nickname}:
    get:
      summary: Calculate user level
      parameters:
        - name: nickname
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User level calculated
        '404':
          description: User not found

  /trophies/create:
    post:
      summary: Create a new trophy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                url:
                  type: string
                xp:
                  type: integer
      responses:
        '200':
          description: Trophy created
        '400':
          description: Invalid data

  /trophies/trophies/{trophyId}:
    delete:
      summary: Delete a trophy
      parameters:
        - name: trophyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Trophy deleted
        '404':
          description: Trophy not found

  /trophies/:
    get:
      summary: Retrieve all trophies
      responses:
        '200':
          description: Trophy list
        '400':
          description: Error retrieving trophies

  /levels/create:
    post:
      summary: Create a new level
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                grade:
                  type: integer
                title:
                  type: string
                xpLevel:
                  type: integer
                url:
                  type: string
      responses:
        '200':
          description: Level created
        '404':
          description: Error

  /levels/{grade}:
    delete:
      summary: Delete a level
      parameters:
        - name: grade
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Level deleted
        '404':
          description: Level not found

  /levels/:
    get:
      summary: Retrieve all levels
      responses:
        '200':
          description: List of levels
        '404':
          description: Error

components:
  schemas:
    User:
      type: object
      properties:
        nickname:
          type: string
          example: johndoe
        bio:
          type: string
          example: Developer, gamer, linguist.
        profilePicture:
          type: string
          example: https://example.com/img/profile.jpg
        cv:
          type: string
          example: https://example.com/cv/johndoe.pdf
        languages:
          type: array
          items:
            type: string
          example: [ "English", "Italian", "French" ]
        trophies:
          type: array
          items:
            type: string
          example: [ "trophy123", "trophy456" ]
